MELTING_POINT = 2327.0;
MELTING_GAP = 100.0;

MELTING_END = MELTING_POINT;
MELTING_START = MELTING_POINT - MELTING_GAP;

function melt_fraction(tx)
    import MELTING_START, MELTING_GAP
{
    _melt_fraction = (tx - MELTING_START) / MELTING_GAP;
}


function mushy_zone(tx)
    import MELTING_START, MELTING_END
{
    _mushy_zone = (tx >= MELTING_START) & (tx < MELTING_END);
}

function thermal_expansion_coef_solid(tx)
{
    val = 4.504526e-03 - 8.69767e-07 * tx;
    val = 5.49141 + tx * val;
    _thermal_expansion_coef_solid = 1.0e-06 * val;
}


function shear_modulus_solid_gpa(tx)
{
    _shear_modulus_solid_gpa = 169.0 - 0.0229 * tx;
}


function young_modulus_solid_gpa(tx)
{
    _young_modulus_solid_gpa = 417.0 - 0.0525 * tx;
}


function thermal_expansion_coef(tx)
    import MELTING_START, MELTING_END, MELTING_GAP
{
    val = 0.0;

    if (tx < MELTING_START) {
        val = thermal_expansion_coef_solid(tx);
    } else if (mushy_zone(tx)) {
        val = 0.0009;
    } else {
        val = 0.0;
    }

    _thermal_expansion_coef = val;
}


function young_modulus(tx)
    import MELTING_START, MELTING_END, MELTING_GAP
{
    val = 0.0;
    y_liquid = 10;

    if (tx < MELTING_START) {
        val = young_modulus_solid_gpa(tx);
    } else if (mushy_zone(tx)) {
        y0 = young_modulus_solid_gpa(MELTING_START);
        y1 = y_liquid;

        alpha = melt_fraction(tx);
        val = y0 * (1 - alpha) + y1 * alpha;
    } else {
        val = y_liquid;
    }

    ! In MPa units
    _young_modulus = 1e3 * val;
}

function poisson_ratio(tx)
    import MELTING_START, MELTING_END, MELTING_GAP
{
    val = 0.45;

    if (tx < MELTING_START) {
        E = young_modulus_solid_gpa(tx);
        G = shear_modulus_solid_gpa(tx);
        val = E / (2.0 * G) - 1.0;
    }

    _poisson_ratio = val;
}
