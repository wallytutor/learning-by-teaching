// --------------------------------------------------------------------
// Parametric geometry of a 2-D axisymmetric cylinder.
//
// Author: Walter Dal'Maz Silva
// Date  : Jan 14 2025
// --------------------------------------------------------------------

General.BackgroundGradient = 0;
General.Color.Background = {200, 220, 240};
General.Color.Foreground = White;
General.Color.Text = White;
General.Color.Axes = White;
General.Color.SmallAxes = White;
General.Axes = 1;
General.SmallAxes = 1;
Geometry.OldNewReg = 0;

// --------------------------------------------------------------------
// Parameters
// --------------------------------------------------------------------

length = 0.10;
height = 0.02;

// Cells per meter on average:
rho = 1000.0;

// --------------------------------------------------------------------
// Computed coordinates
// --------------------------------------------------------------------

x1 = 0.0;
y1 = 0.0;
x2 = length;
y2 = height;

// --------------------------------------------------------------------
// Points
// --------------------------------------------------------------------

Point(1)  = {x1, y1, 0};
Point(2)  = {x2, y1, 0};
Point(3)  = {x2, y2, 0};
Point(4)  = {x1, y2, 0};

// --------------------------------------------------------------------
// Lines
// --------------------------------------------------------------------

Line(1) = {1, 2};
Line(2) = {2, 3};
Line(3) = {3, 4};
Line(4) = {4, 1};

// --------------------------------------------------------------------
// Loops and surfaces
// --------------------------------------------------------------------

Curve Loop(1) = {1, 2, 3, 4};
Plane Surface(1) = {1};

// --------------------------------------------------------------------
// Mesh structuring
// --------------------------------------------------------------------

Transfinite Curve{1, -3} = Round(1 + rho * (x2 - x1));
Transfinite Curve{2, -4} = Round(1 + rho * (y2 - y1));

Transfinite Surface {1};
Recombine Surface{1};

// --------------------------------------------------------------------
// Physics: boundary conditions
// --------------------------------------------------------------------

// External:
Physical Curve(1) = {2};

// Center:
Physical Curve(2) = {4};

// Symmetry:
Physical Curve(3) = {1, 3};

// --------------------------------------------------------------------
// Physics: bodies
// --------------------------------------------------------------------

Physical Surface(1) = {1};

// --------------------------------------------------------------------
// Meshing
// --------------------------------------------------------------------

Mesh 2;

SetOrder 2;

Save "domain.msh";

// --------------------------------------------------------------------
// EOF
// --------------------------------------------------------------------